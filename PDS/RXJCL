
RXJCL - A JCL Rexx facility


Quick Reference
Written by Daniel Gaeta
dfgaeta@br.ibm.com



What is this ?

RXJCL is a tool created to improve repetitive process written.
The JCL preprocessor expands macro sentences in //* JCL cards.


For example :
-------------

   File  Edit  Edit_Settings  Menu  Utilities  Compilers  Test  Help
 sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss
 EDIT       USBUILD.DFG.EXEC($GSDSMP7) - 01.02              Columns 00001 00072
 Command ===>                                                  Scroll ===> CSR
 ****** ***************************** Top of Data ******************************
 ==MSG> -Warning- The UNDO command is not available until you change
 ==MSG>           your edit profile using the command RECOVERY ON.
 000001 //ERRORRPT JOB (ACCOUNTNBR),NAME,REGION=5M,MSGCLASS=H,NOTIFY=&SYSUID
 000002 //SMP       EXEC PGM=GIMSMP,REGION=70M
 000003 //SMPCSI    DD DSN=WWP115.GSD2006B.GLOBAL.CSI,DISP=SHR
 000004 //SMPCNTL   DD *
 000005   SET BDY(GLOBAL) .
 000006 //*   %%SCAN SEQ USBUILD.DFG.EXEC(MYPRODS) LSTPROD
 000007 //*   %%SET IDX=1
 000008 //*   %%REPEAT LSTPROD.0
 000009 //*    %%SET PRDCODE=STRIP(SUBSTR(LSTPROD.IDX,1,72))||'T'
 000010   REPORT ERRSYSMODS
 000011   ZONES(%%(PRDCODE)).
 000012 //*    %%INC IDX
 000013 //*   %%EREPEAT
 000014 /*
 ****** **************************** Bottom of Data ****************************

- all cards //* %%statement will be preprocessed before submit to JES

- all cards, except //* will be written to JES without preprocess


The result after RXJCL is :

  File  Edit  Edit_Settings  Menu  Utilities  Compilers  Test  Help
sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss
EDIT       SYS06345.T165125.RA000.DFGAETA.R0156474         Columns 00001 00072
Command ===>                                                  Scroll ===> CSR
****** ***************************** Top of Data ******************************
==MSG> -Warning- The UNDO command is not available until you change
==MSG>           your edit profile using the command RECOVERY ON.
000001 //ERRORRPT JOB (ACCOUNTNBR),NAME,REGION=5M,MSGCLASS=H,NOTIFY=&SYSUID
000002 //SMP       EXEC PGM=GIMSMP,REGION=70M
000003 //SMPCSI    DD DSN=WWP115.GSD2006B.GLOBAL.CSI,DISP=SHR
000004 //SMPCNTL   DD *
000005   SET BDY(GLOBAL) .
000006   REPORT ERRSYSMODS
000007   ZONES(BPA210T).
000008   REPORT ERRSYSMODS
000009   ZONES(CML830T).
000010   REPORT ERRSYSMODS
000011   ZONES(CMR830T).
000012   REPORT ERRSYSMODS
000013   ZONES(DAE210T).
000014   REPORT ERRSYSMODS
000015   ZONES(DAO710T).
000016   REPORT ERRSYSMODS


A complex sample :
------------------

This sample is a sentence that will generate a report grouping by
products list in USBUILD.DFG.EXEC(MYPRODS) and
listing datasets by WWP115.GSD2006B.<prod>.*


//*   %%OUT LST
//*   %%SCAN SEQ USBUILD.DFG.EXEC(MYPRODS) LSTPROD
//*   %%SET IDX=1
//*   %%REPEAT LSTPROD.0
//*    %%SET PRDCODE=STRIP(SUBSTR(LSTPROD.IDX,1,72))

  PRODUCT : %%(PRDCODE)
  ------------------
//*    %%SET GSDNAME='WWP115.GSD2006B.'||PRDCODE
//*    %%SCAN DSN %%GSDNAME DSNAME
//*    %%SET IDX2=1
//*    %%REPEAT DSNAME.0
//*     %%SET DSN=DSNAME.IDX2
       %%(DSN)
//*     %%INC IDX2
//*    %%EREPEAT
//*    %%INC IDX
//*   %%EREPEAT


Other samples can be found in USBUILD.DFG.EXEC.


How can I run RXJCL :

RXJCL is located in USBUILD.DFG.EXEC
To prepare the environ use RECONCAT command or run USBUILD.DFG.EXEC(#CONCAT).

After #CONCAT step you can run RXJCL as follow :

   Menu  Functions  Confirm  Utilities  Help
 ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss
 EDIT              USBUILD.DFG.EXEC                          Row 00001 of 00012
 Command ===>                                                  Scroll ===> CSR
            Name     Prompt       Size   Created          Changed          ID
 _________ $GSDSMP1                 11  2006/11/14  2006/11/14 08:36:02  DFGAETA
 _________ $GSDSMP2                 18  2006/11/14  2006/11/14 10:54:47  DFGAETA
 _________ $GSDSMP3                  8  2006/11/14  2006/11/14 08:42:46  DFGAETA
 _________ $GSDSMP4                 12  2006/11/14  2006/11/14 10:10:02  DFGAETA
 _________ $GSDSMP5                  9  2006/11/14  2006/11/14 10:22:29  DFGAETA
 _________ $GSDSMP6                 11  2006/11/14  2006/11/14 10:37:45  DFGAETA
 rxjcl____ $GSDSMP7                 14  2006/12/11  2006/12/11 16:47:21  DFGAETA
 _________ #CONCAT                   3  2006/12/11  2006/12/11 16:30:40  DFGAETA
 _________ IEBCIN1                   2  2006/12/05  2006/12/05 07:25:09  HOSHIKA
 _________ IEBCOPY1                 18  2006/12/05  2006/12/11 16:33:50  DFGAETA
 _________ MYPRODS                  35  2006/12/11  2006/12/11 16:33:25  DFGAETA
 _________ RXJCL                   790  2006/11/13  2006/12/11 16:32:00  DFGAETA
           **End**




Quick Reference for RXJCL :


- //*   %%OUT <LST|rdr>

  This macro sends the JCL expanded to ISPF Edit or JES reader.
  Default is LST.


- //*   %%INFODSN <dataset>

  This macro retrieves information about datasets (equivalent to
REXX LISTDSI function).


- //*   %%MODE STACK <ON|off>

  This macro sends the content of object retrieved to STACK or record area.

- //*   %%SAVE <%%var|dataset>

  This macro saves the JCL output area to dataset or %%var value.
  The %%SAVE macro is used to save output JCL preprocessed to many
different outputs.

- //*   %%TSO <tsocommand>

  This macro just executes TSO commands (equivalent to REXX ADDRESS TSO)

- //*   %%EDIT <%%var|dataset>

  This macro invokes EDIT ISPF service to edit datasets.

- //*   %%BROWSE <%%var|dataset>

  This macro invokes BROWSE ISPF service to edit datasets.

- //*   %%TRIM <rexxvar>

  This macro removes spaces from both sides of string.

- //*   %%RX  <statemant>

  This macro interprets REXX statement (equivalent to REXX INTERPRET statement)

- //*   %%ISPF <statemant>

  This macro interprets ISPF statement (equivalent to REXX ADDRESS ISPEXEC)

- //*   %%DROP <rexxvar>

  This macro deletes rexx variable of REXX Variable Global Pool.

- //*   %%INC <rexxvar>

  This macro increments in one numeric REXX variable. (equivalent to C
instruction var++)

- //*   %%DEC <rexxvar>

  This macro decrements in one numeric REXX variable. (equivalent to C
instruction var--)

- //*   %%GET <rexxvar>

  This macro pulls item of STACK area. (equivalent to REXX PULL statement)

- //*   %%PUT <rexxvar>

  This macro pushes item into STACK area. (equivalent to REXX QUEUE statement)

- //*   %%PRINT <expression>

  This macro writes expression to SYSPRINT file. (equivalent to REXX SAY
statement)

- //*   %%SUB

  This macro submits JCL expanded until the moment and clear data of
JCL buffer to new cycle.
  The %%SUB macro is used when we need to submit many JCL in the same process.

- //*   %%SET <expression>

  This macro evaluates REXX expression.
  The %%SET macro can use any REXX expression including REXX functions
and boolean expressions.

  For example :
    //*   %%SET  A=1
    //*   %%SET  DS='USBUILD.GSD.CNTL'
    //*   %%SET  ALIAS=SUBSTR(DS,1,7)


- //*   %%IF  <expression>
    jcl cards or RXJCL macro
  //* < %%ELSE >
    jcl cards or RXJCL macro
  //*   %%ENDIF

This is a simple IF..ELSE..ENDIF sentence. (just one level of IF..ELSE..ENDIF ca
be used)

- //*   %%SCAN DSN <%%var|dataset> <rexxvar>
  //*   %%SCAN LIB <%%var|dataset> <rexxvar>
  //*   %%SCAN SEQ <%%var|dataset> <rexxvar>

This macro reads a DSN, LIB or SEQ object from begin to end, putting data to STA
area or array variable REXX.
When we use array variable REXX the length of array will be put into rexxvar.0 i
and each record readed will be put
into subsequent element.
If %%MODE STACK ON is selected all records will be put into STACK area and the n
of elements readed can be retrieved
using QUEUED() Rexx function or rexxvar.0 element.


- //*   %%REPEAT <rexxvar|literal>
     jcl cards or RXJCL macro
  //*   %%EREPEAT

  This macro is a simple repetition flow. (equivalent to REXX DO..LOOP times)
  The block between %%REPEAT and %%EREPEAT will be executed the number of times
contained in numeric rexxvar
  or numeric literal.

  For example :

  //*  %%SET TT=3
  //*  %%REPEAT TT
  //*    %%PRINT 'REPEATING STRING...'
  //*  %%EREPEAT

  or

  //*  %%REPEAT 3
  //*    %%PRINT 'REPEATING STRING...'
  //*  %%EREPEAT


- //* %%BEGMAP mapname
  //* %%M <map_line_definition>
  //* %%ENDMAP
  //* %%SHOW mapname

  Theses macros define one or many maps to use in fullscreen panels.
  The definitions are the same of ISPF panels. The attributes are fixed.
  The process to create a map is simple, each %%M define a line of panel that
will be shown.

  For example :

  //* %%BEGMAP MAPA1
  //* %%M
  //* %%M   Dataset =>#dname                                      +
  //* %%M
  //* %%ENDMAP
  //* %%SHOW MAPA1
     ...
     ...
  //INPFILE  DD DISP=SHR,DSN=%%(DNAME)
     ...


Macro Variables :


  Macro variable can be used in any JCL card. For example :


  //OUTFILE   DD DISP=SHR,DSN=USBUILD.OUTPUT.D%%OSEQ
  or
  //FILEMOV   DD DISP=SHR,DSN=USBUILD.OUTPUT.D%%ODAYM%%OMONTH


- %%OUSER

  This is a macro-variable that contains userid of current session.

- %%ODAY

  This is a macro-variable that contains system current day.

- %%OMONTH

  This is a macro-variable that contains system current month.

- %%OYEAR

  This is a macro-variable that contains system current year.

- %%ODATE

  This is a macro-variable that contains system current date in format mm/dd/yyy

- %%OSEQ

  This is a macro-variable that contains a sequential number incremented
on each use.

- %%(rexxvar)

  This is a macro-variable that will be changed by data rexx variable.




ABOUT THIS DOCUMENT :

  For additional help please contact me by SAMETIME or Notes (DFGAETA@BR.IBM.COM




