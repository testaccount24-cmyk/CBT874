CNCLPG   TITLE 'Alter characteristics of a running address space. '
   -----------------------------------------------------------------

     Function:   To make an address space Cancelable or
                 Non-Cancelable, Forcible or Non-Forcible,
                 Swappable or Non-Swappable.  Or BURN the
                 address space (version 1.2.5).  KILL the
                 address space is same as BURN, but first
                 the non-MEMTERM bits in the ASCB are
                 turned off (version 1.2.6).

                 Other properties of an address space can be
                 altered, as well.  See below.

                 If the address space is non-MEMTERM-able,
                 and you try to BURN it, an error message
                 is issued, and nothing occurs.  But if you
                 try and KILL it, the non-MEMTERM bits are
                 turned off, and the address space is whacked.
                 The message will tell you so.

     Authority:  You need PSCB OPER authority to run this
                 command.  To do BURN, KILL, NMEM, and MEMT
                 functions, you ALSO need PSCB ACCOUNT authority.
                 Any function controlled by the KILLFLAG, needs
                 PSCB ACCOUNT authority.

     Syntax:     TSO Command:  APF-authorized.

      CNCLPG |jobid ÝASID(hhhh)¨ |CNCL|NCNC (cancelable, non-canc)
             |ASID(hhhh)         |FORC    (force w/o cancel)
             |                   |NFRC    (force needs cancel)
             |                   |NSWP|SWAP (non-swap, swappable)
             |                   |TSWP (transwap)
             |                   |FSWP (force swappable immediately)
             |                   |CSCB or DISP (display CSCB blks)
             |                   |BURN (memterm the address space)
             |                   |KILL (memterm after turning
             |                   |      off non-memtermable bits)
             |                   |NMEM|MEMT  (turn on/off
             |                   |        non-memtermable bits)
             |                   |COUNT  (display DONTSWAP count)
             |-  (displays the entire CSCB chain)
             |?  (displays help)

   -----------------------------------------------------------------

     Notes:

            CANCELABLE, NON-CANCELABLE, FORCIBLE, NON-FORCIBLE:

     CSCB        Cancelable, Non-cancelable, Forcible, Non-forcible
     chain       are determined by bit settings in the address
                 space's CSCB, which is part of the CSCB chain.

     Jobname     Each active address space has a CSCB in the chain.
     and/or      You get to a particular address space by running
     ASID        the entire CSCB chain (mapped by the IEECHAIN
     match       macro) looking for a match on jobname and/or ASID,
                 and preferably on both.

     DISPlay     There may be more than one address space for a
     or          given job name, and more than one CSCB entry
     "CSCB"      for a given ASID.  The CSCB or DISPlay option
     option      of CNCLPG will run the entire CSCB chain and
                 it will show ALL the matches for the parameters
                 given.  To display the ENTIRE CSCB chain from start
                 to finish, use a dash ( - ) instead of the jobname.

     Multiple    If only the jobname or the ASID number alone
     jobs        are used to do an ACTION, then CNCLPG will stop
     with the    at the FIRST CSCB which matches, when an ACTION is
     same name   called for (but NOT for a DISPLAY).  That is why
                 it is better to run the DISPlay (or CSCB) function
                 of CNCLPG first, to display all the possible CSCB
                 entries that might match, before changing any
                 particular address space.  There might be more
                 than one address space with the same jobname or
                 ASID, and you want to change only the correct
                 one, NOT the wrong one.  So it is good practice
                 to display first, and then do a change to the
                 exact address space you want to affect, using
                 both the jobname and ASID(hhhh) parameters.

            SWAPPABLE AND NON-SWAPPABLE:

     SWAP and    Setting an address space to be swappable or
     NSWP need   non-swappable, is accomplished by executing
     to run a    a SYSEVENT macro.  This has to execute in the
     SYSEVENT    target address space, and it was done here by
     macro in    scheduling an SRB to run in the target address
     the         space, when it is different from the address
     target      space running the program.  That piece of code
     address     was written by Joe Reichman.  Thanks, Joe.
     space       You did the hard part!

     TSWP or     When an address space is set by the SYSTEM to be
     TRANSWAP    non-swappable, it is first swapped out, and then
     as          a TRANSWAP is done, to put the pages for the
     compared    address space into preferred storage, rather
     to NSWP     than reconfigurable storage.  This is when the
                 SYSTEM does it initially.  But when you do it
                 later to the address space, using the NSWP option
                 of CNCLPG, which is really a SYSEVENT DONTSWAP,
                 the address space is made non-swappable with the
                 pages remaining where they were.  This is not the
                 best situation.  What you really might want is a
                 TRANSWAP and not a DONTSWAP.

                 If your address space was initially swappable,
                 you can accomplish non-swappability the way the
                 system does, by doing a TRANSWAP, using the TSWP
                 function of CNCLPG.

                 The TSWP option initially swaps the address space
                 out, and then swaps it in, in an orderly manner,
                 and then makes it non-swappable.  A NSWP command,
                 on the other hand, fixes the pages where they
                 were, in a haphazard manner, whether they were in
                 preferred storage or in reconfigurable storage.
                 Sometimes, you can't do a TRANSWAP, because it
                 would move the pages of the running job in an
                 unpredictable manner.  So then you do an NSWP.

     FSWP or     Use this very cautiously, to make sure that you
     Forced      will not disturb a running job that may need its
     Swappable   existing pages intact, or a V=R job.
     as
     opposed     Every time the system gets a DONTSWAP or TRANSWAP
     to SWAP     request against an address space, it keeps a
                 count of how many of them there are.  This is
                 because any address space can issue such a
                 request against any other address space.  Of
                 course the issuing address space has to be APF
                 authorized.  Our target address space can only
                 me made SWAPPABLE when the count of DONTSWAP
                 requests against it, goes down to 1.

                 FSWP forces the count to one, and then makes
                 the address space swappable, no matter how many
                 outstanding DONTSWAP requests, the address space
                 has against it.  FSWP is an emergency measure,
                 and it has been put there, only to deal with
                 extraordinary circumstances.  You should hardly
                 ever use it, OR NEVER USE IT!  But it is there.


        NON-MEMTERMABLE AND MEMTERMABLE: (THE REAL "NON-FORCIBLE")

     NMEM makes  In the ASCB of an address space there are two
     a job both  bits, ASCBNOMT and less importantly, ASCBNOMD.
     NON-FORCI-  ASCBNOMT controls the attribute, when it is on,
     BLE and     that the address space is NON-MEMTERMABLE or
     NON-CANCEL- NON-FORCIBLE.  If NON-CANCELABLE is also true,
     ABLE.       as well as the non-memtermable bit ASCBNOMT,
                 then when you try and cancel the job, it will say,
     MEMT makes  NON-CANCELABLE, and when you try and FORCE the
     the job     job, it will say NON-FORCIBLE.  The two bits
     FORCIBLE,   ASCBNOMT in the ASCB which has to be on, and
     but leaves  the cancelable bit in the job's CSCB entry,
     it to be    CNCL in flag CHACT, which has to be off,
     NON-CANCEL- control this situation.
     ABLE.
                 A job should not be left NON-FORCIBLE and
                 CANCELABLE.  That defeats the purpose of
                 NON-FORCIBLE, in that the job can easily
                 then be cancelled, because CANCEL will work.

                 The action NMEM (non-memtermable) sets both
                 then non-forcible bit in the ASCB on, and the
                 cancelable bit in the job's CSCB entry, off.
                 The action MEMT (make memtermable) turns only
                 the ASCBNOMT bit (non-memtermable) off, but
                 leaves the non-cancelable situation in place.
                 If you want to turn off non-cancelable later,
                 then the CNCL action will do this.

     -------------------------------------------------------------
     BURN        BURN -  Kill the designated address space with a
     (v 1.2.5)   CALLRTM TYPE=MEMTERM (like a FORCE).  Be careful !
     -------------------------------------------------------------
     KILL        KILL -  Kill the designated address space with a
     (v 1.2.6)   CALLRTM TYPE=MEMTERM (like a FORCE).  Be careful !
                 KILL is a "super BURN".  Be VERY careful.....!
                 Before doing the MEMTERM, KILL turns off bits
                 in the ASCB (ASCBNOMT and ASCBNOMD), the
                 "non-FORCIBLE" bits.  Can whack any address space.
     (v 1.2.7)   You need PSCB ACCOUNT authority to run BURN or KILL,
                 along with OPER authority to run the rest of the
                 program.
     -------------------------------------------------------------
     NMEM and    NMEM will make the address space NON-FORCIBLE
     MEMT        and NON-CANCELABLE.  MEMT will make the address
     (v 1.2.8)   space FORCIBLE, but it will leave the cancelable
                 bit in place, however it was before.
                 (Since the FORCE operator command actually equates
                 to a CALLRTM TYPE=MEMTERM macro call, making an
                 address space NON-FORCIBLE is also called making
                 it NON-MEMTERMABLE.
     -------------------------------------------------------------
     TSWP        Instead of initially making an address nonswappable
     (v 1.2.9)   using a DONTSWAP function in the SYSEVENT macro,
                 there is now an alternative of doing a TRANSWAP
                 function, which operates on a swappable address
                 space, swaps it out, and then swaps it in, trying
                 to use protected storage frames.  This only works
                 if the address space was swappable to begin with.
                 Otherwise, the TSWP seems to work like an NSWP.
                 IBM recommends TSWP instead of NSWP if the address
                 space is to remain non-swappable for a long time.

                 NUMBER OF DONTSWAP REQUESTS - OUCBNDS field of the
                         OUCB control block (macro IRAOUCB)
                 Each NSWP or TSWP request increments this number
                 by one.  An address space cannot be made swappable
                 until this number is reduced to one, and a
                 SYSEVENT OKSWAP is issued.  If the number is more
                 than one, then each successive SYSEVENT OKSWAP
                 against the address space, decrements this number
                 by one.  NSWP, TSWP, and SWAP requests now display
                 this number.
     -------------------------------------------------------------
     FSWP        If several users issued DONTSWAP requests against
     (v 1.2.10)  the same address space, then the OUCBNDS field,
                 which is a halfword number, contains a quantity
                 that is more than X'0001'.  To make that address
                 space swappable, you would have to issue that
                 number of SYSEVENT OKSWAP requests.  Each OKSWAP
                 request reduces the number by one.  FSWP (Forced
                 SWAP) first sets this number to X'0001' and then
                 issues a SYSEVENT OKSWAP.  So you can be sure to
                 make that address swappable right away, with ONE
                 action, and not many.
     -------------------------------------------------------------
     (v 1.2.10A)  This version is a cleanup of all the previous
                 versions.  The messages have (hopefully) been
                 made consistent and accurate.  The HELP has been
                 made clearer, hopefully.  TSWP has been cleaned
                 up to work as safely as possible.
     -------------------------------------------------------------
     (v 1.2.10B)  This version has the COUNT function which does no
                 action besides displaying the DONTSWAP count for
                 that address space.
     -------------------------------------------------------------
     (v 1.2.10C)  Cleaned up various bugs with COUNT, and also made
                 the displays more consistent.  Changed TITLE of
                 the program, because it does many kinds of major
                 alterations to a running address space.
     -------------------------------------------------------------
     (v 1.2.10D)  Cleaned up "IKJ56500I COMMAND CNCLPG NOT FOUND"
                 message to accommodate different length command
                 name.  Use ECTPCMD field to extract command name.
     -------------------------------------------------------------
     (v 1.2.10E)  Fixed messaging problem when a swappable addrspc
                 was being made swappable again.  Same problem with
                 non-swappable addrspc being made non-swappable.
                 Message has to reflect that condition was not
                 changed, except for possibly the DONTSWAP count.
     -------------------------------------------------------------

     Date:       April 15, 2010

     Latest Modification:   June 21, 2017

     Authors:    Sam Golob, Joe Reichman (who did the hard part)

     Technical Detail:  PUTLINE interface for TSO Output.
                        Uses the APUT macro, and EPUTL module.

     Changes:  1.  SWAP, NSWP support dropped from this program
                    initially.  Version is 1.0.0.

               2.  Messages and DISP improved, to just show matching
                    CSCB chain entries, instead of all of them.
                    Coding a dash instead of a jobname or asid(hhhh)
                    - will display the entire CSCB chain.

               3.  SWAP, NSWP support put back in this program.
                    Version is 1.1.0   (June 16, 2010)
                    It now does your own address space.  The cross
                    memory stuff was not put in yet, to make other
                    address spaces swappable, or non-swappable.

               4.  Complete SWAP, NSWP support for cross address
                    space communication, was put in by Joe
                    Reichman.  (Oct 2011)  Version is 1.2.0.

               5.  Burn an address space, if that is desired.
                    (Oct 2012)  Version is 1.2.5.

               6.  Kill an address space.  Before you do the
                   CALLRTM MEMTERM, the non-forcible flags in the
                   ASCB are turned off.
                    (May 2017)  Version is 1.2.6.

               7.  Authority checking. So far, you need PSCB OPER
                    to do anything. ACCT to do BURN or KILL.
                    Version is 1.2.7.

               8.  Make address space Non-Memtermable (can't be
                    FORCEd), or Memtermable (can be FORCEd).
                    Non-Memtermable implies Non-Cancelable, because
                    it isn't effective if the address space is
                    Cancelable but non-Memtermable).  You can easily
                    get rid of it, and it defeats the purpose of
                    non-Memtermable.  If you later make it
                    Memtermable, you can make it Cancelable next.

               9.  Add TSWP function to do a TRANSWAP instead of
                    a DONTSWAP.  It really is only good if you do
                    it the first time, on an initially swappable
                    address space.  If you TRANSWAP an address
                    space that is already nonswappable, then you
                    will merely increase the number of DONTSWAP
                    requests by one, and the SYSEVENT return code
                    will be 4.

              10.  Added display of the OUCBNDS field (halfword),
                    which is the number of outstanding DONTSWAP
                    requests.  The address space cannot become
                    swappable until this number is reduced to 1,
                    and an OKSWAP is done.

              11.  SRB was modified to run in 31-bit mode (from Joe).

              12.  Added Forced SWAP option to make the address
                    space swappable even though there are a number
                    of DONTSWAP requests still against it.  One
                    application of this is if you want to TRANSWAP
                    the address space.  First you FSWP it to ensure
                    that it is swappable, and then you TSWP it to
                    do the TRANSWAP.  THIS SHOULD ONLY BE DONE,
                    IF YOU KNOW WHAT YOU ARE DOING.

              13.  Cleaned up the messages and the help, to make
                    them (hopefully) consistent, and to hopefully
                    supply the information needed to know what is
                    going on with the address space being
                    manipulated.

              14.  Added option to display the DONTSWAP COUNT
                    associated with an address space.


    Change   Pgmr                   Description
    -------  -----   ----------------------------------------------

             JOER     Add SRB code to allow swapping in xmem.
                      (See lines commented with JOE.)

